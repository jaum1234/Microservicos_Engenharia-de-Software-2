openapi: 3.0.3
info:
  title: Sistema de Controle de Bicicletário - SCB
  version: 0.0.1
tags:
  - name: Ciclistas
    description: Serviço de Gerenciamento de Ciclistas
  - name: Cartões
    description: Serviço de Cartões
  - name: Emails
    description: Serviço de Email
  - name: Equipamentos
    description: Serviço de Gerenciamento de Equipamentos

paths:
  # Totens
  /totens:
    get:
      tags:
        - Equipamentos
      responses:
        200:
          description: "Totens listados com sucesso."
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    numero:
                      type: integer
                    localizacao:
                      type: string
    post:
      tags:
        - Equipamentos
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                localizacao:
                  type: string
                descricao:
                  type: string
      responses:
        201:
          description: Totem criado com sucesso.
        400:
          $ref: "#/components/responses/400"
  /totens/{totemId}:
    delete:
      tags:
        - Equipamentos
      parameters:
        - in: path
          name: totemId
          required: true
          schema:
            type: integer
      responses:
        204:
          description: Totem excluído com sucesso.
        400:
          description: Totem está associado a uma ou mais trancas.
  /totens/{totemId}/trancas/{trancaId}/incluir:
    patch:
      tags:
        - Equipamentos
      parameters:
        - $ref: "#/components/parameters/totemId"
        - $ref: "#/components/parameters/trancaId"
      responses:
        200:
          description: "Tranca incluída no totem com sucesso."
          content:
            application/json:
              schema:
                type: object
                properties:
                  sucesso:
                    type: boolean
        404:
          description: "Tranca não cadastrada no sistema."
          content:
            application/json:
              schema:
                type: object
                properties:
                  erro:
                    type: string
                    example: Número da tranca inválido (tranca não cadastrada no sistema).
  /totens/{totemId}/trancas/{trancaId}/solicitar-liberacao:
    
  /totens/{totemId}/trancas/{trancaId}/retirar:
    patch:
      tags:
        - Equipamentos
      parameters:
        - $ref: "#/components/parameters/totemId"
        - $ref: "#/components/parameters/trancaId"
  


  # Bicicletas  
  /bicicletas:
    get:
      tags:
        - Equipamentos
      parameters:
        - in: query
          name: totemId
          description: "Totem ao qual a bicicleta está associada."
          schema:
            type: integer
      responses:
        200:
          description: "Bicicletas listadas com sucesso."
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    numero:
                      type: integer
                    marca:
                      type: string
                    modelo:
                      type: string
                    ano:
                      type: string
                    localizacao:
                      type: string
    post:
      tags:
        - Equipamentos
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/bicicleta"
      responses:
        201:
          description: Bicicleta cadastrada com sucesso.
        400:
          $ref: "#/components/responses/400"
  /bicicletas/{bicicletaId}:
    get:
      tags:
        - Equipamentos
      parameters:
        - in: path
          name: bibicletaId
          required: true
          schema:
            type: integer
      responses:
        200:
          description: "Bicicleta exibida com sucesso."
          content:
            application/json:
              schema:
                type: object
                properties:
                  numero_da_bicicleta:
                    type: integer
                  marca:
                    type: string
                  modelo:
                    type: string
                  ano:
                    type: string
                  statys:
                    type: string
    patch:
      parameters:
        - in: path
          name: bicicletaId
          required: true
          schema:
            type: integer
      tags:
        - Equipamentos
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                marca:
                  type: string
                modelo:
                  type: string
                ano:
                  type: string
      responses:
        200:
          description: Bicicleta atualizada com sucesso.
        400:
          $ref: "#/components/responses/400"
  /bicicletas/{bicicletaId}/excluir:
    patch:
      tags:
        - Equipamentos
      parameters:
        - in: path
          name: bicicletaId
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
      responses:
        200:
          description: "Status de bicicleta atualizado com sucesso."

  # Ciclistas
  /ciclistas/{email}/validar:
    get:
      description: "Valida se um email já foi cadastrado."
      tags:
        - Ciclistas
      parameters:
        - in: path
          name: email
          required: true
          schema:
            type: string
      responses:
        200:
          description: "Email disponível."
          content:
            application/json:
              schema:
                type: object
                properties:
                  sucesso:
                    type: string
                    example: Email disponível para cadastro
        400:
          description: "Email já cadastrado ou inválido."
          content:
            application/json:
              schema:
                type: object
                properties:
                  erro:
                    type: string
                    example: Email já cadastrado ou inválido.  
  /ciclistas:
    post:
      description: "Cadastra um novo ciclista."
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ciclista"
              
      responses:
        201:
          description: "Ciclista cadastrado com sucesso."
        400:
          $ref: "#/components/responses/400"
      tags:
      - Ciclistas
  /ciclistas/{ciclistaId}:
    put:
      tags:
        - Ciclistas
      parameters:
        - in: path
          name: ciclistaId
          required: true
          schema:
            type: integer
      description: "Atualiza os dados de um ciclista"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ciclista"
      responses:
        200:
          description: Ciclista atualizado com sucesso.
        400:
          $ref: "#/components/responses/400"
  /ciclistas/{ciclistaId}/ativar:
    patch:
      description: "Atualiza parcialmente os dados de um ciclista."
      tags:
        - Ciclistas
      parameters:
        - name: ciclistaId
          in: path
          required: true
          schema:
            type: "integer"
      responses:
        200:
          description: "Ciclista atualizado com sucesso."
        400:
          description: "Ciclista já se encontra ativo."
          content:
            application/json:
              schema:
                type: object
                properties:
                  erro:
                    type: string
                    example: "Dados inválidos: ciclista já se encontra ativo."

  # Cartöes
  /cartoes:
    post:
      tags:
      - Cartões
      description: "Cadastra um novo cartão no sistema."
      requestBody:
        content:
          application/json:
            schema: 
              $ref: "#/components/schemas/cartao"
      responses:
        201:
          description: "Cartão cadastrado com sucesso."
  /cartoes/{cartaoId}:
    get:
      parameters:
        - in: path
          required: true
          name: cartaoId
          schema:
            type: integer
      tags:
        - Cartões
      responses:
        200:
          description: "Cartão recuperado com sucesso."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/cartao"
    put:
      parameters:
        - in: path
          name: cartaoId
          required: true
          schema:
            type: integer
      tags:
        - Cartões
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/cartao"
      responses:
        200:
          description: "Cartão atualizado com sucesso."
        400:
          $ref: "#/components/responses/400"
  /cartoes/validar:
    get:
      parameters:
        - in: query
          name: numero
          required: true
          schema:
            type: integer
        - in: query
          name: nome
          required: true
          schema:
            type: string
        - in: query
          name: validade
          required: true
          schema:
            type: string
        - in: query
          name: codigo
          required: true
          schema:
            type: string
      tags:
      - Cartões
      responses:
        200:
          description: "Cartão aprovado."
        400:
          description: "Cartão reprovado: dados inválidos."
          content:
            application/json:
              schema:
                type: object
                properties:
                  erro:
                    type: string
                    example: Cartão recusado.

  # Emails
  /emails/enviar:
    post:
      tags:
        - "Emails"
      requestBody:
        content:
          application/json:
            schema: 
              $ref: "#/components/schemas/email"
              
      responses:
        201:
          description: "Email enviado com sucesso."
        400:
          description: "Dados inválidos."
  
  # Trancas
  /trancas/{trancaId}/excluir:
    patch:
      parameters:
        - in: path
          name: trancaId
          required: true
          schema:
            type: integer
      tags:
        - Equipamentos
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
      responses:
        200:
          description: "Status da tranca atualizado com sucesso."
  /trancas/{trancaId}:
    get:
      tags:
        - Equipamentos
      parameters:
        - in: path
          name: trancaId
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Tranca exibida com sucesso.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  ano_de_fabricacao:
                    type: string
                  modelo:
                    type: string
    patch:
      tags:
        - Equipamentos
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                numero_da_tranca:
                  type: string
                status:
                  type: string
                ano_de_fabricacao:
                  type: string
                modelo:
                  type: string
      responses:
        200:
          description: "Tranca atualizada com sucesso."
        400:
          $ref: "#/components/responses/400"
  /trancas:
    get:
      tags:
        - Equipamentos
      parameters:
        - in: query
          name: totemId
          description: Totem associado a tranca.
          schema:
            type: integer
      responses:
        200:
          description: "Trancas listadas com sucesso."
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    numero:
                      type: integer
                    status:
                      type: string
                    localizacao:
                      type: string
                    ano_de_fabricacao:
                      type: string
                    modelo:
                      type: string
    post:
      tags:
        - Equipamentos
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                ano_de_fabricacao:
                  type: string
                modelo:
                  type: string
      responses:
        201:
          description: "Tranca incluída com sucesso."
        400:
          $ref: "#/components/responses/400"

  # Funcionários
  /funcionarios:
    get:
      tags:
        - Equipamentos
      responses:
        200:
          description: Funcionarios listados com sucesso.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    matricula:
                      type: string
                    nome:
                      type: string
                    idade:
                      type: integer
                    funcao:
                      type: string
                    cpf:
                      type: string
                    email:
                      type: string
    post:
      tags:
        - Equipamentos
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                matricula:
                  type: string
                email:
                  type: string
                senha:
                  type: string
                nome:
                  type: string
                idade:
                  type: integer
                funcao:
                  type: string
                cpf:
                  type: string
      responses:
        201:
          description: Funcionário criado com sucesso.
        400:
          $ref: "#/components/responses/400"
  /funcionarios/{funcionarioId}:
    get:
      tags:
        - Equipamentos
      parameters:
        - in: path
          name: funcionarioId
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Funcionário exibido com sucesso.
          content:
            application/json:
              schema:
                type: object
                properties:
                  nome:
                    type: string
                  idade:
                    type: integer
                  matricula:
                    type: string
                  email:
                    type: string
                  senha:
                    type: string
                  documento:
                    type: string
    patch:
      parameters:
        - in: path
          name: funcionarioId
          required: true
          schema:
            type: integer
      tags:
        - Equipamentos
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                nome:
                  type: string
                idade:
                  type: integer
                matricula:
                  type: string
                email:
                  type: string
                senha:
                  type: string
                funcao:
                  type: string
                documento:
                  type: string
      responses:
        200:
          description: Funcionário atualizado com sucesso.
        400:
          description: Dados inválidos.
    delete:
      parameters:
        - in: path
          name: funcionarioId
          required: true
          schema:
            type: integer
      tags:
        - Equipamentos
      responses:
        204:
          description: Funcionário excluído com sucesso.

components:
  responses:
    400:
      description: "Dados inválidos."
      content:
        application/json:
          schema:
            type: object
            properties:
              erro:
                type: string
                example: Dados inválidos
  parameters:
    totemId:
      in: path
      name: totemId
      required: true
      schema:
        type: integer
    trancaId:
      in: path
      name: trancaId
      required: true
      schema:
        type: integer
  schemas:
    cartao:
      type: object
      properties:
        numero:
          type: "number"
        nome:
          type: "string"
        validade:
          type: "string"
        codigo_de_seguranca:
          type: "string"
    email:
      type: "object"
      properties:
        remetente:
          type: "string"
        destinatario:
          type: "string"
        assunto:
          type: "string"
        conteudo:
          type: "string"
    ciclista:
      type: "object"
      properties:
        nome:
          type: "string"
        brasileiro:
          type: "boolean"
        cpf:
          type: "string"
        senha:
          type: "string"
        foto_do_documento:
          type: "string"
        passaporte:
          type: object
          properties:
            numero:
              type: integer
            validade:
              type: string
            pais:
              type: string
    bicicleta:
      type: object
      properties:
        marca:
          type: string
        modelo:
          type: string
        ano:
          type: string
        status:
          type: string
          
