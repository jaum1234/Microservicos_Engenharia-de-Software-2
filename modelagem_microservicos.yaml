openapi: 3.0.3
info:
  title: Sistema de Controle de Bicicletário - SCB
  version: 1.0.2
tags:
  - name: Ciclistas
    description: Serviço de Gerenciamento de Ciclistas
  - name: Pagamentos
    description: Serviço de Pagamento
  - name: Emails
    description: Serviço de Email
  - name: Equipamentos
    description: Serviço de Gerenciamento de Equipamentos
  - name: Alugueis
    description: Serviço de Gerenciamento de Alugueis

paths:
  # Totens
  /totens:
    get:
      tags:
        - Equipamentos
      responses:
        200:
          description: "Totens listados com sucesso."
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    numero:
                      type: integer
                    localizacao:
                      type: string
        
    post:
      tags:
        - Equipamentos
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                localizacao:
                  type: string
                descricao:
                  type: string
      responses:
        201:
          description: Totem criado com sucesso.
        400:
          $ref: "#/components/responses/400"
  /totens/{totemId}:
    delete:
      tags:
        - Equipamentos
      parameters:
        - in: path
          name: totemId
          required: true
          schema:
            type: integer
      responses:
        204:
          description: Totem excluído com sucesso.
        400:
          description: Totem está associado a uma ou mais trancas.
  
  # Bicicletas
  /bicicletas:
    get:
      tags:
        - Equipamentos
      parameters:
        - in: query
          name: totemId
          description: "Totem ao qual a bicicleta está associada."
          schema:
            type: integer
        - in: query
          name: trancaId
          description: Tranca a qual a bicicleta está associada.
          schema:
            type: integer
      responses:
        200:
          description: "Bicicletas listadas com sucesso."
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    numero:
                      type: integer
                    marca:
                      type: string
                    modelo:
                      type: string
                    ano:
                      type: string
                    localizacao:
                      type: string
    post:
      tags:
        - Equipamentos
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/bicicleta"
      responses:
        201:
          description: Bicicleta cadastrada com sucesso.
        400:
          $ref: "#/components/responses/400"
  /bicicletas/{bicicletaId}:
    get:
      tags:
        - Equipamentos
      parameters:
        - in: path
          name: bibicletaId
          required: true
          schema:
            type: integer
      responses:
        200:
          description: "Bicicleta exibida com sucesso."
          content:
            application/json:
              schema:
                type: object
                properties:
                  numero_da_bicicleta:
                    type: integer
                  marca:
                    type: string
                  modelo:
                    type: string
                  ano:
                    type: string
                  status:
                    type: string
        404:
          description: Número da bicicleta inválido.
          content:
            application/json::
              schema:
                type: object
                properties:
                  erro:
                    type: string
                    example: Número da bicicleta inválido.
                  dados:
                    type: object
                    properties:
                      bicicletaId:
                        type: integer
    patch:
      parameters:
        - in: path
          name: bicicletaId
          required: true
          schema:
            type: integer
      tags:
        - Equipamentos
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                marca:
                  type: string
                modelo:
                  type: string
                ano:
                  type: string
                status:
                  type: string
      responses:
        200:
          description: Bicicleta atualizada com sucesso.
        400:
          $ref: "#/components/responses/400"
  /bicicletas/{bicicletaId}/excluir:
    patch:
      tags:
        - Equipamentos
      parameters:
        - in: path
          name: bicicletaId
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
      responses:
        200:
          description: "Status de bicicleta atualizado com sucesso."
  /bicicletas/{bicicletaId}/retirar:
    patch:
      tags:
        - Equipamentos
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: aposentada
                data_retirada:
                  type: string
                numero_tranca:
                  type: integer
                reparador:
                  type: integer
      responses:
        200:
          description: Bicicleta retirada com sucesso.
          content:
            application/json:
              schema:
                type: object
                properties:
                  mensagem:
                    type: string
                    example: "Tranca retirada."
                  dados:
                    type: object
                    properties:
                      bicicleta_id:
                        type: integer
                        example: 1231
                      tranca_id:
                        type: integer
                        example: 9213
                      reparador:
                        type: integer
                        example: 3209
        400:
          description: Bicicleta com status “disponível” ou tranca com status “livre”
          content:
            application/json:
              schema:
                type: object
                properties:
                  erro:
                    type: string
                    example: Bicicleta com status “disponível” ou tranca com status “livre”
                  dados:
                    type: object
                    properties:
                      status_bicicleta:
                        type: string
                      status_tranca:
                        type: string
        404:
          description: Número da tranca inválido.
          content:
            application/json:
              schema:
                type: object
                properties:
                  erro:
                    type: string
                    example: Número da tranca inválido.
                  dados:
                    type: object
                    properties:
                      trancaId: 
                        type: integer
                        example: -10323
  /bicicletas/{bicicletaId}/incluir:
    patch:
      parameters:
        - $ref: "#/components/parameters/trancaId"
        - $ref: "#/components/parameters/bicicletaId"
      tags:
        - Equipamentos
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data_insercao:
                  type: string
                  example: 2024-01-01 14:13:21
                trancaId:
                  type: integer
                bicicletaId:
                  type: integer
                matricula_reparador:
                  type: string
      responses:
        200:
          description: "Bicicleta incluída com sucesso."
          content:
            application/json:
              schema:
                type: object
                properties:
                  mensagem: 
                    type: string
                    example: Bicicleta incluída.
                  dados:
                    type: object
                    properties:
                      bicileta_id: 
                        type: integer
                        example: 1
                      tranca_id:
                        type: integer
                        example: 1
                      data_insercao:
                        type: string
                        example: 2024-01-01 12:12:12
        404:
          description: Número da bicicleta inválido.
          content:
            application/json:
              schema:
                type: object
                properties:
                  erro:
                    type: string
                    example: Número da bicicleta inválido.
                  dados:
                    type: object
                    properties:
                      numero_bicicleta: 
                        type: integer
                        example: -10323
        400:
          description: "Bicicleta em uso"
          content:
            application/json:
              schema:
                type: object
                properties:
                  erro:
                    type: string
                    example: Bicicleta em uso.
                  dados:
                    type: object
                    properties:
                      bicicletaId:
                        type: integer

  /bicicletas/{bicicletaId}/solicitar-reparo:
    patch:
      tags:
        - Equipamentos
      parameters:
        - $ref: "#/components/parameters/bicicletaId"
      responses:
        200:
          description: Reparo solicitado
          content:
            application/json:
              schema:
                type: object
                properties:
                  mensagem:
                    type: string
                    example: Reparo solicitado.
                  dados:
                    type: object
                    properties:
                      bicicletaId:
                        type: integer

  # Ciclistas
  /ciclistas/{email}/validar:
    get:
      description: "Valida se um email já foi cadastrado."
      tags:
        - Ciclistas
      parameters:
        - in: path
          name: email
          required: true
          schema:
            type: string
      responses:
        200:
          description: "Email disponível."
          content:
            application/json:
              schema:
                type: object
                properties:
                  sucesso:
                    type: string
                    example: Email disponível para cadastro
        400:
          description: "Email já cadastrado ou inválido."
          content:
            application/json:
              schema:
                type: object
                properties:
                  erro:
                    type: string
                    example: Email já cadastrado ou inválido.  
  /ciclistas:
    post:
      description: "Cadastra um novo ciclista."
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ciclista"
              
      responses:
        201:
          description: "Ciclista cadastrado com sucesso."
        400:
          $ref: "#/components/responses/400"
      tags:
      - Ciclistas
  /ciclistas/{ciclistaId}:
    get:
      tags:
        - Ciclistas
      parameters:
        - $ref: "#/components/parameters/ciclistaId"
      responses:
        200:
          description: Ciclista exibido.
          content:
            application/json:
              schema:
                type: object
                properties:
                  nome:
                    type: string
                  brasileira:
                    type: boolean
                  cpf:
                    type: string
                  senha:
                    type: string
                  foto_do_documento:
                    type: string
                  passaporte:
                    type: string
                  ativo:
                    type: string

    put:
      tags:
        - Ciclistas
      parameters:
        - $ref: "#/components/parameters/ciclistaId"

      description: "Atualiza os dados de um ciclista"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ciclista"
      responses:
        200:
          description: Ciclista atualizado com sucesso.
        400:
          $ref: "#/components/responses/400"
  /ciclistas/{ciclistaId}/ativar:
    patch:
      description: "Atualiza parcialmente os dados de um ciclista."
      tags:
        - Ciclistas
      parameters:
        - name: ciclistaId
          in: path
          required: true
          schema:
            type: "integer"
      responses:
        200:
          description: "Ciclista atualizado com sucesso."
        400:
          description: "Ciclista já se encontra ativo."
          content:
            application/json:
              schema:
                type: object
                properties:
                  erro:
                    type: string
                    example: "Dados inválidos: ciclista já se encontra ativo."

  # Cartöes
  /cartoes:
    post:
      tags:
      - Pagamentos
      description: "Cadastra um novo cartão no sistema."
      requestBody:
        content:
          application/json:
            schema: 
              $ref: "#/components/schemas/cartao"
      responses:
        201:
          description: "Cartão cadastrado com sucesso."
  /cartoes/{cartaoId}:
    get:
      parameters:
        - $ref: "#/components/parameters/cartaoId"
      tags:
        - Pagamentos
      responses:
        200:
          description: "Cartão recuperado com sucesso."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/cartao"
    put:
      parameters:
        - in: path
          name: cartaoId
          required: true
          schema:
            type: integer
      tags:
        - Pagamentos
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/cartao"
      responses:
        200:
          description: "Cartão atualizado com sucesso."
        400:
          $ref: "#/components/responses/400"
  /cartoes/validar:
    get:
      parameters:
        - in: query
          name: numero
          required: true
          schema:
            type: integer
        - in: query
          name: nome
          required: true
          schema:
            type: string
        - in: query
          name: validade
          required: true
          schema:
            type: string
        - in: query
          name: codigo
          required: true
          schema:
            type: string
      tags:
      - Pagamentos
      responses:
        200:
          description: "Cartão aprovado."
        400:
          description: "Cartão reprovado: dados inválidos."
          content:
            application/json:
              schema:
                type: object
                properties:
                  erro:
                    type: string
                    example: Cartão recusado.
  /cobrancas/enviar:
    post:
      tags:
        - Pagamentos
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                valor:
                  type: integer
                ciclistaId:
                  type: integer
                tipo:
                  type: string
                cartao:
                  $ref: "#/components/schemas/cartao"
                    
      responses:
        200:
          description: Pagamento autorizado.
          content:
            application/json:
              schema:
                type: object
                properties:
                  mensagem:
                    type: string
                    example: Pagamento autorizado.
                  dados:
                    type: object
                    properties:
                      valor:
                        type: integer
                        example: 10.00
        400:
          description: Pagamento não autorizado.
          content:
            application/json:
              schema:
                type: object
                properties:
                  erro:
                    type: string
                    example: Pagamento não autorizado.
        500:
          description: Erro no pagamento.
          content:
            application/json:
              schema:
                type: object
                properties:
                  erro:
                    type: string
                    example: Erro no pagamento.
  /cobrancas/cobrar-taxas-atrasadas:
    get:
      tags:
        - Pagamentos
      responses:
        200:
          description: Cobranças realizadas.
          content:
            application/json:
              schema:
                type: object
                properties:
                  mensagem:
                    type: string
                    example: Cobranças realizadas.
  

  # Emails
  /emails/enviar:
    post:
      tags:
        - "Emails"
      requestBody:
        content:
          application/json:
            schema: 
              $ref: "#/components/schemas/email"
              
      responses:
        201:
          description: "Email enviado com sucesso."
        400:
          description: "Dados inválidos."
  
  # Trancas
  /trancas/{trancaId}/excluir:
    patch:
      parameters:
        - in: path
          name: trancaId
          required: true
          schema:
            type: integer
      tags:
        - Equipamentos
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
      responses:
        200:
          description: "Status da tranca atualizado com sucesso."
  /trancas/{trancaId}:
    get:
      tags:
        - Equipamentos
      parameters:
        - in: path
          name: trancaId
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Tranca exibida com sucesso.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  ano_de_fabricacao:
                    type: string
                  modelo:
                    type: string
        404:
          description: Número da tranca inválido.
          content:
            application/json:
              schema:
                type: object
                properties:
                  erro:
                    type: string
                  dados:
                    type: object
                    properties:
                      numero_tranca:
                        type: integer
        503:
          description: Tranca não responde.
          content:
            application/json:
              schema:
                type: object
                properties:
                  erro:
                    type: string
                    example: Tranca não está respondendo.

    patch:
      tags:
        - Equipamentos
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                numero_da_tranca:
                  type: string
                status:
                  type: string
                ano_de_fabricacao:
                  type: string
                modelo:
                  type: string
      responses:
        200:
          description: "Tranca atualizada com sucesso."
        400:
          $ref: "#/components/responses/400"
  /trancas:
    get:
      tags:
        - Equipamentos
      parameters:
        - in: query
          name: totemId
          description: Totem associado a tranca.
          schema:
            type: integer
      responses:
        200:
          description: "Trancas listadas com sucesso."
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    numero:
                      type: integer
                    status:
                      type: string
                    localizacao:
                      type: string
                    ano_de_fabricacao:
                      type: string
                    modelo:
                      type: string
    post:
      tags:
        - Equipamentos
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                ano_de_fabricacao:
                  type: string
                modelo:
                  type: string
      responses:
        201:
          description: "Tranca incluída com sucesso."
        400:
          $ref: "#/components/responses/400"
  /trancas/{trancaId}/retirar:
    patch:
      tags:
        - Equipamentos
      parameters:
        - $ref: "#/components/parameters/totemId"
        - $ref: "#/components/parameters/trancaId"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: em reparo
                data_retirada:
                  type: string
                  example: 2024-01-01 04:20:00
                matricula_reparador:
                  type: string
                  example: "23019283"
      responses:
        200:
          description: "Tranca retirada com sucesso."
          content:
            application/json:
              schema:
                type: object
                properties:
                  mensagem:
                    type: string
                    example: "Tranca retirada."
        404:
          description: Número da tranca inválido.
          content:
            application/json:
              schema:
                type: object
                properties:
                  erro:
                    type: string
                    example: Número da tranca inválido.
                  dados:
                    type: object
                    properties:
                      trancaId: 
                        type: integer
                        example: -10323      
  /trancas/{trancaId}/solicitar-abertura:
    patch:
      tags:
        - Equipamentos
      parameters:
        - $ref: "#/components/parameters/trancaId"
      responses:
        200:
          description: Tranca disponível.
          content:
            application/json:
              schema:
                type: object
                properties:
                  mensagem:
                    type: string
                    example: Tranca disponível.
                  dados:
                    type: object
                    properties:
                      tranca_id:
                        type: integer
                        example: 1
        404:
          description: Número da tranca inválido.
          content:
            application/json:
              schema:
                type: object
                properties:
                  erro:
                    type: string
                    example: Número da tranca inválido.
                  dados:
                    type: object
                    properties:
                      numero_tranca: 
                        type: integer
                        example: -10323
        400:
          description: Bicicleta com status "disponível" ou tranca com status "livre".
          content:
            application/json:
              schema:
                type: object
                properties:
                  erro:
                    type: string
                    example: Bicicleta com status "disponível" ou tranca com status "livre".
                  dados:
                    type: object
                    properties:
                      status_bicicleta:
                        type: string
                      status_tranca:
                        type: string
  /trancas/{trancaId}/solicitar-fechamento:
    patch:
      tags:
        - Equipamentos
      parameters:
        - $ref: "#/components/parameters/trancaId"
      responses:
        200:
          description: Tranca fechada.
          content:
            application/json:
              schema:
                type: object
                properties:
                  mensagem:
                    type: string
                    example: Tranca fechada.
                  dados:
                    type: object
                    properties:
                      trancaId:
                        type: integer
                        example: 1 
  /trancas/{trancaId}/solicitar-liberacao:
    patch:
      tags:
        - Equipamentos
      parameters:
        - $ref: "#/components/parameters/totemId"
        - $ref: "#/components/parameters/trancaId"
      responses:
        200:
          description: "Tranca liberada."
          content:
            application/json:
              schema:
                type: object
                properties:
                  mensagem: 
                    type: string
                    example: Tranca liberada.
                  dados:
                    type: object
                    properties:
                      trancaId:
                        type: integer
        400:
          description: Tranca com status diferente de "reparo solicitado"
          content:
            application/json:
              schema:
                type: object
                properties:
                  erro: 
                    type: string
                    example: Tranca com status diferente de "reparo solicitado"
        404:
          description: "Número da tranca inválido."
          content:
            application/json:
              schema:
                type: object
                properties:
                  erro:
                    type: string
                    example: Número da tranca inválido.
  /trancas/{trancaId}/incluir:
    patch:
      tags:
        - Equipamentos
      parameters:
        - $ref: "#/components/parameters/totemId"
        - $ref: "#/components/parameters/trancaId"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data_insercao:
                  type: string
                  example: 2024-01-01 04:20:00
                matricula_reparador:
                  type: string
                  example: "321311"

      responses:
        200:
          description: "Tranca incluída no totem com sucesso."
          content:
            application/json:
              schema:
                type: object
                properties:
                  mensagem:
                    type: string
                  dados:
                    type: object
                    properties:
                      trancaId:
                        type: integer
                      data_insercao:
                        type: string
                          
        404:
          description: "Tranca não cadastrada no sistema."
          content:
            application/json:
              schema:
                type: object
                properties:
                  erro:
                    type: string
                    example: Número da tranca inválido (tranca não cadastrada no sistema).
  /trancas/{trancaId}/bicicletas/{bicicletaId}/momento-atual:
    get:
      tags:
        - Equipamentos
      parameters:
        - $ref: "#/components/parameters/trancaId"
        - $ref: "#/components/parameters/bicicletaId"
      responses:
        200:
          description: Traca e bicicleta associadas.
          content:
            application/json:
              schema:
                type: object
                properties:
                  mensagem:
                    type: string
                    example: Bicicleta está presa na tranca.
                  dados:
                    type: object
                    properties:
                      bicicleta:
                        type: object
                        properties:
                          marca:
                            type: string
                          modelo:
                            type: string
                          ano:
                            type: string
                          status:
                            type: string
                      tranca:
                        type: object
                        properties:
                          status:
                            type: string
                          ano_de_fabricacao:
                            type: string
                          modelo:
                            type: string
        400:
          description: Bicicleta e tranca não estão associados.
          content:
            application/json:
              schema:
                type: object
                properties:
                  erro:
                    type: string
                    example: Bicicleta e tranca não estão associados.
                  dados:
                    type: object
                    properties:
                      bicicletaId:
                        type: integer
                      trancaId:
                        type: integer

  # Alugueis
  /alugueis:
    post:
      tags:
        - Alugueis
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                trancaId:
                  type: integer
                ciclistaId:
                  type: integer
                data_retirada:
                  type: string
      responses:
        200:
          description: Aluguel realizado.
          content:
            application/json:
              schema:
                type: object
                properties:
                  mensagem:
                    type: string
                    example: Aluguel realizado.
                  dados:
                    type: object
                    properties:
                      data_retirada:
                        type: string
                      trancaId:
                        type: integer
                      ciclistaId:
                        type: integer
                      cartaoId:
                        type: integer
                      bicicletaId:
                        type: string
  /alugueis/devolver:
    patch:
      tags:
        - Alugueis
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                bicicletaId:
                  type: integer
      responses:
        200:
          description: Bicicleta devolvida.
          content:
            application/json:
              schema:
                type: object
                properties:
                  mensagem:
                    type: string
                    example: Bicicleta devolvida.
                  dados:
                    type: object
                    properties:
                      bicicletaId:
                        type: integer
                      trancaId:
                        type: integer
                      data_devolucao: 
                        type: string
                      data_cobranca:
                        type: string
                      cartaoId:
                        type: integer
                      valor_extra:
                        type: number

  # Funcionários
  /funcionarios:
    get:
      tags:
        - Equipamentos
      responses:
        200:
          description: Funcionarios listados com sucesso.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    matricula:
                      type: string
                    nome:
                      type: string
                    idade:
                      type: integer
                    funcao:
                      type: string
                    cpf:
                      type: string
                    email:
                      type: string
    post:
      tags:
        - Equipamentos
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                matricula:
                  type: string
                email:
                  type: string
                senha:
                  type: string
                nome:
                  type: string
                idade:
                  type: integer
                funcao:
                  type: string
                cpf:
                  type: string
      responses:
        201:
          description: Funcionário criado com sucesso.
        400:
          $ref: "#/components/responses/400"
  /funcionarios/{funcionarioId}:
    get:
      tags:
        - Equipamentos
      parameters:
        - in: path
          name: funcionarioId
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Funcionário exibido com sucesso.
          content:
            application/json:
              schema:
                type: object
                properties:
                  nome:
                    type: string
                  idade:
                    type: integer
                  matricula:
                    type: string
                  email:
                    type: string
                  senha:
                    type: string
                  documento:
                    type: string
    patch:
      parameters:
        - in: path
          name: funcionarioId
          required: true
          schema:
            type: integer
      tags:
        - Equipamentos
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                nome:
                  type: string
                idade:
                  type: integer
                matricula:
                  type: string
                email:
                  type: string
                senha:
                  type: string
                funcao:
                  type: string
                documento:
                  type: string
      responses:
        200:
          description: Funcionário atualizado com sucesso.
        400:
          description: Dados inválidos.
    delete:
      parameters:
        - in: path
          name: funcionarioId
          required: true
          schema:
            type: integer
      tags:
        - Equipamentos
      responses:
        204:
          description: Funcionário excluído com sucesso.

components:
  responses:
    400:
      description: "Dados inválidos."
      content:
        application/json:
          schema:
            type: object
            properties:
              erro:
                type: string
                example: Dados inválidos
  parameters:
    bicicletaId:
      in: path
      name: bicicletaId
      required: true
      schema:
        type: integer
    totemId:
      in: path
      name: totemId
      required: true
      schema:
        type: integer
    trancaId:
      in: path
      name: trancaId
      required: true
      schema:
        type: integer
    cartaoId:
      in: path
      name: cartaoId
      required: true
      schema:
        type: integer
    ciclistaId:
      in: path
      name: ciclistaId
      required: true
      schema:
        type: integer
  schemas:
    cartao:
      type: object
      properties:
        numero:
          type: "number"
        nome:
          type: "string"
        validade:
          type: "string"
        codigo_de_seguranca:
          type: "string"
    email:
      type: "object"
      properties:
        remetente:
          type: "string"
        destinatario:
          type: "string"
        assunto:
          type: "string"
        conteudo:
          type: "string"
    ciclista:
      type: "object"
      properties:
        nome:
          type: "string"
        brasileiro:
          type: "boolean"
        cpf:
          type: "string"
        senha:
          type: "string"
        foto_do_documento:
          type: "string"
        passaporte:
          type: object
          properties:
            numero:
              type: integer
            validade:
              type: string
            pais:
              type: string
    bicicleta:
      type: object
      properties:
        marca:
          type: string
        modelo:
          type: string
        ano:
          type: string
        status:
          type: string
          
